{
	"info": {
		"_postman_id": "2d0055af-8884-4e05-955f-f325fcb165d7",
		"name": "mag-mutual-tech-screening Copy",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "4801889"
	},
	"item": [
		{
			"name": "Get All Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const actualHttpStatus = pm.response.code\r",
							"pm.test('Expected HTTP status [200]. Actual = [${actualHttpStatus}]', function () {\r",
							"    pm.expect(actualHttpStatus).to.eql(200);\r",
							"});\r",
							"\r",
							"const jsonData = pm.response.json();\r",
							"\r",
							"\r",
							"const user = jsonData.users[0];\r",
							"const actuald = parseInt(user.id);\r",
							"const expectedId = 100;\r",
							"\r",
							"pm.test(`Expect user ID to be [${expectedId}]. Acutal =[${actuald}]`, function () {\r",
							"    pm.expect(actuald).to.eql(expectedId);\r",
							"});\r",
							"\r",
							"const actuaFirstName = user.firstName;\r",
							"const expectedFirstName = 'Andree';\r",
							"\r",
							"pm.test(`Expect user firstName to be [${expectedFirstName}]. Acutal =[${actuaFirstName}]`, function () {\r",
							"    pm.expect(actuaFirstName).to.eql(expectedFirstName);\r",
							"});\r",
							"\r",
							"const actualLastName  = user.lastName;\r",
							"const expectedLastName = 'Flita';\r",
							"\r",
							"pm.test(`Expect user lastName to be [${expectedLastName}]. Acutal =[${actualLastName}]`, function () {\r",
							"    pm.expect(actualLastName).to.eql(expectedLastName);\r",
							"});\r",
							"\r",
							"const actualProfession = user.profession;\r",
							"const expectedProfession = 'worker';\r",
							"\r",
							"pm.test(`Expect user lastName to be [${expectedProfession}]. Acutal =[${actualProfession}]`, function () {\r",
							"    pm.expect(actualProfession).to.eql(expectedProfession);\r",
							"});\r",
							"\r",
							"\r",
							"const actualDateCreated = user.dateCreated;\r",
							"const expectedDateCreated = '2020-08-31T00:00:00Z';\r",
							"\r",
							"pm.test(`Expect user dateCreated to be [${expectedDateCreated}]. Acutal =[${actualDateCreated}]`, function () {\r",
							"    pm.expect(actualDateCreated).to.eql(expectedDateCreated);\r",
							"});\r",
							"\r",
							"const actualCountry = user.country;\r",
							"const expectedCountry = 'Wallis and Futuna';\r",
							"\r",
							"pm.test(`Expect user dateCreated to be [${expectedCountry}]. Acutal =[${actualCountry}]`, function () {\r",
							"    pm.expect(actualCountry).to.eql(expectedCountry);\r",
							"});\r",
							"\r",
							"const actualCity = user.city;\r",
							"const expectedCity = 'Nanjing';\r",
							"\r",
							"pm.test(`Expect user dateCreated to be [${expectedCity}]. Acutal =[${actualCity}]`, function () {\r",
							"    pm.expect(actualCity).to.eql(expectedCity);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:10000/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "10000",
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Users By Date",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const actualHttpStatus = pm.response.code\r",
							"pm.test('Expected HTTP status [200]. Actual = [${actualHttpStatus}]', function () {\r",
							"    pm.expect(actualHttpStatus).to.eql(200);\r",
							"});\r",
							"\r",
							"const jsonData = pm.response.json();\r",
							"\r",
							"\r",
							"const user = jsonData.users[0];\r",
							"const actuald = parseInt(user.id);\r",
							"const expectedId = 106;\r",
							"\r",
							"pm.test(`Expect user ID to be [${expectedId}]. Acutal =[${actuald}]`, function () {\r",
							"    pm.expect(actuald).to.eql(expectedId);\r",
							"});\r",
							"\r",
							"const actuaFirstName = user.firstName;\r",
							"const expectedFirstName = 'Jere';\r",
							"\r",
							"pm.test(`Expect user firstName to be [${expectedFirstName}]. Acutal =[${actuaFirstName}]`, function () {\r",
							"    pm.expect(actuaFirstName).to.eql(expectedFirstName);\r",
							"});\r",
							"\r",
							"const actualLastName  = user.lastName;\r",
							"const expectedLastName = 'Hoban';\r",
							"\r",
							"pm.test(`Expect user lastName to be [${expectedLastName}]. Acutal =[${actualLastName}]`, function () {\r",
							"    pm.expect(actualLastName).to.eql(expectedLastName);\r",
							"});\r",
							"\r",
							"\r",
							"const actualProfession = user.profession;\r",
							"const expectedProfession = 'firefighter';\r",
							"\r",
							"pm.test(`Expect user profession to be [${expectedProfession}]. Acutal =[${actualProfession}]`, function () {\r",
							"    pm.expect(actualProfession).to.eql(expectedProfession);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"const actualDateCreated = user.dateCreated;\r",
							"const expectedDateCreated = '2022-02-16T00:00:00Z';\r",
							"\r",
							"pm.test(`Expect user dateCreated to be [${expectedDateCreated}]. Acutal =[${actualDateCreated}]`, function () {\r",
							"    pm.expect(actualDateCreated).to.eql(expectedDateCreated);\r",
							"});\r",
							"\r",
							"const actualCountry = user.country;\r",
							"const expectedCountry = 'Macao';\r",
							"\r",
							"pm.test(`Expect user country to be [${expectedCountry}]. Acutal =[${actualCountry}]`, function () {\r",
							"    pm.expect(actualCountry).to.eql(expectedCountry);\r",
							"});\r",
							"\r",
							"const actualCity = user.city;\r",
							"const expectedCity = 'Bras√≠lia';\r",
							"\r",
							"pm.test(`Expect user city to be [${expectedCity}]. Acutal =[${actualCity}]`, function () {\r",
							"    pm.expect(actualCity).to.eql(expectedCity);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:10000/users/byDate?fromDate=2022-02-16&toDate=2022-02-25",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "10000",
					"path": [
						"users",
						"byDate"
					],
					"query": [
						{
							"key": "fromDate",
							"value": "2022-02-16"
						},
						{
							"key": "toDate",
							"value": "2022-02-25"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Users By Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const actualHttpStatus = pm.response.code\r",
							"pm.test('Expected HTTP status [200]. Actual = [${actualHttpStatus}]', function () {\r",
							"    pm.expect(actualHttpStatus).to.eql(200);\r",
							"});\r",
							"\r",
							"const jsonData = pm.response.json();\r",
							"\r",
							"\r",
							"const user = jsonData.users[0];\r",
							"const actuald = parseInt(user.id);\r",
							"const expectedId = 200;\r",
							"\r",
							"pm.test(`Expect user ID to be [${expectedId}]. Acutal =[${actuald}]`, function () {\r",
							"    pm.expect(actuald).to.eql(expectedId);\r",
							"});\r",
							"\r",
							"const actuaFirstName = user.firstName;\r",
							"const expectedFirstName = 'Courtnay';\r",
							"\r",
							"pm.test(`Expect user firstName to be [${expectedFirstName}]. Acutal =[${actuaFirstName}]`, function () {\r",
							"    pm.expect(actuaFirstName).to.deep.equal(expectedFirstName);\r",
							"});\r",
							"\r",
							"const actualLastName  = user.lastName;\r",
							"const expectedLastName = 'Goldina';\r",
							"\r",
							"pm.test(`Expect user lastName to be [${expectedLastName}]. Acutal =[${actualLastName}]`, function () {\r",
							"    pm.expect(actualLastName).to.eql(expectedLastName);\r",
							"});\r",
							"\r",
							"const actualProfession = user.profession;\r",
							"const expectedProfession = 'firefighter';\r",
							"\r",
							"pm.test(`Expect user lastName to be [${expectedProfession}]. Acutal =[${actualProfession}]`, function () {\r",
							"    pm.expect(actualProfession).to.eql(expectedProfession);\r",
							"});\r",
							"\r",
							"\r",
							"const actualDateCreated = user.dateCreated;\r",
							"const expectedDateCreated = '2022-01-04T00:00:00Z';\r",
							"\r",
							"pm.test(`Expect user dateCreated to be [${expectedDateCreated}]. Acutal =[${actualDateCreated}]`, function () {\r",
							"    pm.expect(actualDateCreated).to.eql(expectedDateCreated);\r",
							"});\r",
							"\r",
							"const actualCountry = user.country;\r",
							"const expectedCountry = 'Greece';\r",
							"\r",
							"pm.test(`Expect user Country to be [${expectedCountry}]. Acutal =[${actualCountry}]`, function () {\r",
							"    pm.expect(actualCountry).to.eql(expectedCountry);\r",
							"});\r",
							"\r",
							"\r",
							"const actualCity = user.city;\r",
							"const expectedCity = 'Santo Domingo';\r",
							"\r",
							"pm.test(`Expect user city to be [${expectedCity}]. Acutal =[${actualCity}]`, function () {\r",
							"    pm.expect(actualCity).to.eql(expectedCity);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:10000/users/id/200",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "10000",
					"path": [
						"users",
						"id",
						"200"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Users By Profession",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const actualHttpStatus = pm.response.code\r",
							"pm.test('Expected HTTP status [200]. Actual = [${actualHttpStatus}]'), function () {\r",
							"    pm.expect(actualHttpStatus).to.eql(200);\r",
							"}\r",
							"\r",
							"const jsonData = pm.response.json();\r",
							"\r",
							"\r",
							"const user = jsonData.users[0];\r",
							"console.log(user)\r",
							"const actuald = parseInt(user.id);\r",
							"const expectedId = 105;\r",
							"\r",
							"pm.test(`Expect user ID to be [${expectedId}]. Acutal =[${actuald}]`, function () {\r",
							"    pm.expect(actuald).to.eql(expectedId);\r",
							"});\r",
							"\r",
							"const actuaFirstName = user.firstName;\r",
							"const expectedFirstName = 'Christy';\r",
							"\r",
							"pm.test(`Expect user firstName to be [${expectedFirstName}]. Acutal =[${actuaFirstName}]`, function () {\r",
							"    pm.expect(actuaFirstName).to.eql(expectedFirstName);\r",
							"});\r",
							"\r",
							"const actualLastName  = user.lastName;\r",
							"const expectedLastName = 'Raffo';\r",
							"\r",
							"pm.test(`Expect user lastName to be [${expectedLastName}]. Acutal =[${actualLastName}]`, function () {\r",
							"    pm.expect(actualLastName).to.eql(expectedLastName);\r",
							"});\r",
							"\r",
							"const actualProfession = user.profession;\r",
							"const expectedProfession = 'police officer';\r",
							"\r",
							"pm.test(`Expect user profession to be [${expectedProfession}]. Acutal =[${actualProfession}]`, function () {\r",
							"    pm.expect(actualProfession).to.eql(expectedProfession);\r",
							"});\r",
							"\r",
							"\r",
							"const actualDateCreated = user.dateCreated;\r",
							"const expectedDateCreated = '2020-10-04T00:00:00Z';\r",
							"\r",
							"pm.test(`Expect user dateCreated to be [${expectedDateCreated}]. Acutal =[${actualDateCreated}]`, function () {\r",
							"    pm.expect(actualDateCreated).to.eql(expectedDateCreated);\r",
							"});\r",
							"\r",
							"const actualCountry = user.country;\r",
							"const expectedCountry = 'Nicaragua';\r",
							"\r",
							"pm.test(`Expect user country to be [${expectedCountry}]. Acutal =[${actualCountry}]`, function () {\r",
							"    pm.expect(actualCountry).to.eql(expectedCountry);\r",
							"});\r",
							"\r",
							"const actualCity = user.city;\r",
							"const expectedCity = 'Canberra';\r",
							"\r",
							"pm.test(`Expect user city to be [${expectedCity}]. Acutal =[${actualCity}]`, function () {\r",
							"    pm.expect(actualCity).to.equal(expectedCity);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"profession\": \"police officer\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:10000/users/byProfession",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "10000",
					"path": [
						"users",
						"byProfession"
					]
				}
			},
			"response": []
		}
	]
}